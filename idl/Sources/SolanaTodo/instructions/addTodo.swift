/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita-swift
 */
import Foundation
import Beet
import Solana

/**
 * @category Instructions
 * @category AddTodo
 * @category generated
 */
public struct AddTodoInstructionArgs{
    let instructionDiscriminator: [UInt8] /* size: 8 */
    let content: String

    public init(
        instructionDiscriminator: [UInt8] /* size: 8 */ = addTodoInstructionDiscriminator,
        content: String
    ) {
        self.instructionDiscriminator = instructionDiscriminator
        self.content = content
    }
}
/**
 * @category Instructions
 * @category AddTodo
 * @category generated
 */
public let addTodoStruct = FixableBeetArgsStruct<AddTodoInstructionArgs>(
    fields: [
        ("instructionDiscriminator", Beet.fixedBeet(.init(value: .collection(UniformFixedSizeArray<UInt8>(element: .init(value: .scalar(u8())), len: 8))))),
        ("content", Beet.fixableBeat(Utf8String()))
    ],
    description: "AddTodoInstructionArgs"
)
/**
* Accounts required by the _addTodo_ instruction
*
* @property [_writable_, **signer**] todo  
* @property [_writable_, **signer**] user   
* @category Instructions
* @category AddTodo
* @category generated
*/
public struct AddTodoInstructionAccounts {
    let todo: PublicKey
    let user: PublicKey
    let systemProgram: PublicKey?

    public init(
        todo: PublicKey,
        user: PublicKey,
        systemProgram: PublicKey? = nil
    ) {
        self.todo = todo
        self.user = user
        self.systemProgram = systemProgram
    }
}

public let addTodoInstructionDiscriminator = [188, 16, 45, 145, 4, 5, 188, 75] as [UInt8]

/**
* Creates a _AddTodo_ instruction.
*
* @param accounts that will be accessed while the instruction is processed
  * @param args to provide as instruction data to the program
 * 
* @category Instructions
* @category AddTodo
* @category generated
*/
public func createAddTodoInstruction(accounts: AddTodoInstructionAccounts, 
args: AddTodoInstructionArgs, programId: PublicKey=PublicKey(string: "AaCX2J9gPgujGg5xsNhvPuziJpQvWoXd5HrQj26c2ep3")!) -> TransactionInstruction {

    let data = addTodoStruct.serialize(
            instance: ["instructionDiscriminator": addTodoInstructionDiscriminator,
"content": args.content])

    let keys: [AccountMeta] = [
        AccountMeta(
            publicKey: accounts.todo,
            isSigner: true,
            isWritable: true
        ),
        AccountMeta(
            publicKey: accounts.user,
            isSigner: true,
            isWritable: true
        ),
        AccountMeta(
            publicKey: accounts.systemProgram ?? PublicKey.systemProgramId,
            isSigner: false,
            isWritable: false
        )
    ]

    let ix = TransactionInstruction(
                keys: keys,
                programId: programId,
                data: data.0.bytes
            )
    return ix
}